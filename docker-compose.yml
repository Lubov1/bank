
services:
  account-service:
    image: account-service:0.0.1
    platform: linux/amd64
    build:
      context: .
      dockerfile: DockerfileAccountService
    ports:
      - "8082:8082"
    depends_on:
      service-db:
        condition: service_healthy
#      redis-cache:
#        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - SERVER_PORT=8082
      - SPRING_DATASOURCE_URL=jdbc:postgresql://service-db:5432/postgres
#
  blocker:
    image: blocker:0.0.1
    platform: linux/amd64
    build:
      context: .
      dockerfile: DockerfileBlocker
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081


  cash-service:
    image: cash-service:0.0.1
    platform: linux/amd64
    build:
      context: .
      dockerfile: DockerfileCashService
    ports:
      - "8098:8098"
    environment:
      - SERVER_PORT=8098

#

  exchange:
    image: exchange:0.0.1
    platform: linux/amd64
    build:
      context: .
      dockerfile: DockerfileExchange
    ports:
      - "8095:8095"
    environment:
      - SERVER_PORT=8095



  exchange-generator:
    image: exchange-generator:0.0.1
    platform: linux/amd64
    build:
      context: .
      dockerfile: DockerfileExchangeGenerator
    ports:
      - "8096:8096"
    environment:
      - SERVER_PORT=8096


  front:
    image: front:0.0.1
    platform: linux/amd64
    build:
      context: .
      dockerfile: DockerfileFront
    ports:
      - "8083:8083"
    environment:
      - SERVER_PORT=8083


  gateway:
    image: gateway:0.0.1
    platform: linux/amd64
    build:
      context: .
      dockerfile: DockerfileGatewayApi
    ports:
      - "8084:8084"
    environment:
      - SERVER_PORT=8084

#
  notification-service:
    image: notification-service:0.0.1
    platform: linux/amd64
    build:
      context: .
      dockerfile: DockerfileNotificationService
    ports:
      - "8085:8085"
    environment:
      - SERVER_PORT=8085
#
  transfer:
    image: transfer:0.0.1
    platform: linux/amd64
    build:
      context: .
      dockerfile: DockerfileTransfer
    ports:
      - "8097:8097"
    environment:
      - SERVER_PORT=8097


  service-db:
    image: postgres:14.7
    platform: linux/amd64
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5


  consul:
    image: hashicorp/consul:1.17
    container_name: consul
    command: agent -dev -client=0.0.0.0 -log-level=INFO
    ports:
      - "8500:8500"
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://127.0.0.1:8500/v1/status/leader" ]
      interval: 2s
      timeout: 1s
      retries: 30
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"


  consul-seeder:
    image: curlimages/curl:8.8.0
    depends_on:
      consul:
        condition: service_healthy
    volumes:
      - ./config:/config:ro
    entrypoint: [ "/bin/sh", "/config/config.sh" ]
    environment:
      CONSUL_ADDR: http://consul:8500
      CONSUL_KV_PREFIX: config
      CONSUL_DATA_KEY: data

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    platform: linux/amd64
    container_name: keycloak
    command:
      - start-dev
    volumes:
      - ./keycloak/keycloak-setup.sh:/opt/keycloak/keycloak-setup.sh
    entrypoint: >
      /bin/bash -c "
        /opt/keycloak/bin/kc.sh $${0} &             
        pid=$$!
        /opt/keycloak/keycloak-setup.sh             
        wait $$pid                                  
      " start-dev --import-realm
    healthcheck:
      test: >
        /bin/bash -c '
          /opt/keycloak/bin/kcadm.sh config credentials \
            --server http://localhost:8080 \
            --realm master \
            --user admin \
            --password admin > /dev/null 2>&1
        '
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 30s
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

volumes:
  db-data:
#  pgadmin-data: